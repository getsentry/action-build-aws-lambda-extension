name: "Build AWS Lambda Layer"
description: "Creates a Lambda layer including the Sentry SDK and the Sentry Lambda extension."
inputs:
  artifact_name:
    description: Name of the prepared articact the Lambda Layer zip file should be uploaded to
    required: true
  zip_file_name:
    description: Name of the zip file that will be created
    required: true
  build_cache_key:
    description: Build cache key
    required: true
  build_cache_paths:
    description: Paths of the build cache
    required: true
runs:
  using: "composite"
  steps:
    - name: Check build cache
      uses: actions/cache@v2
      id: cache_built_packages
      with:
        path: ${{ inputs.build_cache_paths }}
        key: ${{ inputs.build_cache_key }}
    - name: Download latest relay
      shell: bash
      run: |
        echo "Downloading relay..."
        mkdir -p dist-serverless/extensions
        curl -0 --silent \
            --output dist-serverless/extensions/relay \
            `curl -s https://release-registry.services.sentry.io/apps/relay/latest | jq -r .files.\"relay-Linux-x86_64\".url`
        chmod +x dist-serverless/extensions/relay
        echo "Done downloading relay."
    - name: Configure Lambda extension to start relay
      shell: bash
      run: |
        echo "Creating start script..."
        cat > dist-serverless/extensions/sentry-lambda-extension << EOT
#!/usr/bin/env bash
set -euo pipefail
./relay run
        EOT
        chmod +x dist-serverless/extensions/sentry-lambda-extension
        echo "Done creating start script."
    - name: Create Lambda Layer zip
      shell: bash
      run: |
        echo "Creating ${{ inputs.zip_file_name }}..."
        cd dist-serverless
        # preserving symlinks with -y is important for Node based Layers!
        zip -r -y ../${{ inputs.zip_file_name }} . --exclude \*__pycache__\* --exclude \*.yml
        cd ..
        echo "Done creating ${{ inputs.zip_file_name }}."

        echo "Contents of the created zip file:"
        unzip -Z ${{ inputs.zip_file_name }}
    - name: Upload zip (will be picked up by Craft for deployment)
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.artifact_name }}
        path: ${{ inputs.zip_file_name }}
